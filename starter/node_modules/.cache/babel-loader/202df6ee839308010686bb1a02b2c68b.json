{"ast":null,"code":"var _jsxFileName = \"/home/shehreen/Documents/Udacity/udacity-project1-aBookTrackingApp/starter/src/components/BookShelf.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Book from \"./Book\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BookShelf = ({\n  CurrentShelf,\n  title,\n  onShelfUpdate\n}) => {\n  _s();\n\n  const [Updated, setUpdated] = useState(false);\n\n  const changingShelf = newShelf => {\n    if (Updated === true) {\n      let changedShelf = [...CurrentShelf, newShelf];\n      onShelfUpdate(changedShelf);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"books-grid\",\n            children: CurrentShelf.map(c => {\n              return c.imageLinks && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Book, {\n                    title: c.title,\n                    author: c.authors,\n                    shelf: c.shelf,\n                    image: c.imageLinks,\n                    id: c.id // onUpdateShelf={setUpdated}\n\n                  }, c.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"open-search\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/search\",\n        children: \"Add a book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookShelf, \"MA/w5a89wrTZ1fCfGrO+UEvxGww=\");\n\n_c = BookShelf;\nexport default BookShelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"sources":["/home/shehreen/Documents/Udacity/udacity-project1-aBookTrackingApp/starter/src/components/BookShelf.js"],"names":["React","useState","Link","Book","BookShelf","CurrentShelf","title","onShelfUpdate","Updated","setUpdated","changingShelf","newShelf","changedShelf","map","c","imageLinks","authors","shelf","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KAA4C;AAAA;;AAC5D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,aAAa,GAAIC,QAAD,IAAc;AAClC,QAAIH,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAII,YAAY,GAAG,CAAC,GAAGP,YAAJ,EAAkBM,QAAlB,CAAnB;AACAJ,MAAAA,aAAa,CAACK,YAAD,CAAb;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCN;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBACGD,YAAY,CAACQ,GAAb,CAAkBC,CAAD,IAAO;AACvB,qBACEA,CAAC,CAACC,UAAF,iBACE;AAAA,uCACE;AAAA,yCACE,QAAC,IAAD;AAEE,oBAAA,KAAK,EAAED,CAAC,CAACR,KAFX;AAGE,oBAAA,MAAM,EAAEQ,CAAC,CAACE,OAHZ;AAIE,oBAAA,KAAK,EAAEF,CAAC,CAACG,KAJX;AAKE,oBAAA,KAAK,EAAEH,CAAC,CAACC,UALX;AAME,oBAAA,EAAE,EAAED,CAAC,CAACI,EANR,CAOE;;AAPF,qBACOJ,CAAC,CAACI,EADT;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAkBD,aAnBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA9CD;;GAAMd,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport Book from \"./Book\";\nimport \"../App.css\";\n\nconst BookShelf = ({ CurrentShelf, title, onShelfUpdate }) => {\n  const [Updated, setUpdated] = useState(false);\n\n  const changingShelf = (newShelf) => {\n    if (Updated === true) {\n      let changedShelf = [...CurrentShelf, newShelf];\n      onShelfUpdate(changedShelf);\n    }\n  };\n\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-content\">\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{title}</h2>\n          <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {CurrentShelf.map((c) => {\n                return (\n                  c.imageLinks && (\n                    <li>\n                      <>\n                        <Book\n                          key={c.id}\n                          title={c.title}\n                          author={c.authors}\n                          shelf={c.shelf}\n                          image={c.imageLinks}\n                          id={c.id}\n                          // onUpdateShelf={setUpdated}\n                        />\n                        {/* {Updated && changingShelf(c)} */}\n                      </>\n                    </li>\n                  )\n                );\n              })}\n            </ol>\n          </div>\n        </div>\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"/search\">Add a book</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default BookShelf;\n"]},"metadata":{},"sourceType":"module"}